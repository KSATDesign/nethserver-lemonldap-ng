[all]

; CUSTOM FUNCTION
; If you want to create customFunctions in rules, declare them here:
;require = Package
; Prevent Portal to crash if Perl module is not found
;requireDontDie = 1
;customFunctions = function1 function2
;customFunctions = Package::func1 Package::func2

; CROSS-DOMAIN
; If you have some handlers that are not registered on the main domain,
; uncomment this
;cda = 1

; SAFE JAIL
; Uncomment this to disable Safe jail.
; Warning: this can allow malicious code in custom functions or rules
;useSafeJail = 0

; LOGGING
;
; 1 - Defined logging level
;   Set here one of error, warn, notice, info or debug
logLevel     = warn
; Note that this has no effect for Apache2 logging: Apache LogLevel is used
; instead
;
; 2 - Change logger
;
;   By default, logging is set to:
;    - Lemonldap::NG::Common::Logger::Apache2  for ApacheMP2 handlers
;    - Lemonldap::NG::Common::Logger::Syslog   for FastCGI (Nginx)
;    - Lemonldap::NG::Common::Logger::Std      for PSGI applications (manager,
;                                              portal,...) when they are not
;                                              launched by FastCGI server
;   Other loggers availables:
;    - Lemonldap::NG::Common::Logger::Log4perl to use Log4perl
;
;   "Std" is redirected to the web server logs for Apache. For Nginx, only if
;   request failed
;
;   You can overload this in this section (for all) or in another section if
;   you want to change logger for a specified app.
;
;   LLNG uses 2 loggers: 1 for technical logs (logger), 1 for user actions
;   (userLogger). "userLogger" uses the same class as "logger" if not set.
;logger     = Lemonldap::NG::Common::Logger::Syslog
;userLogger = Lemonldap::NG::Common::Logger::Log4perl
;
; 2.1 - Using Syslog
;
;   For Syslog logging, you can also overwrite facilities. Default values:
;logger             = Lemonldap::NG::Common::Logger::Syslog
;syslogFacility     = daemon
;syslogOptions      = cons,pid,ndelay
;userSyslogFacility = auth
;userSyslogOptions  = cons,pid,ndelay
;
; 2.2 - Using Log4perl
;
;   If you want to use Log4perl, you can set these parameters. Here are default
;   values:
;logger             = Lemonldap::NG::Common::Logger::Log4perl
;log4perlConfFile   = /etc/log4perl.conf
;log4perlLogger     = LLNG
;log4perlUserLogger = LLNG.user
;
;   Here, Log4perl configuration is read from /etc/log4perl.conf. The "LLNG"
;   value points to the logger class. Example:
;     log4perl.logger.LLNG	= WARN, File1
;     log4perl.logger.LLNG.user = INFO, File2
;     ...

; CONFIGURATION CHECK
;
; LLNG verify configuration at server start. If you use "reload" mechanism,
; local cache will be updated. Configuration is checked locally every
; 10 minutes by each LLNG component. You can change this value using
; `checkTime` (time in seconds).
; To increase performances, you should comment this parameter and rely on cache.
checkTime = 1
